{
	"info": {
		"_postman_id": "29a97c96-d11e-43da-95ad-a354f11cdbea",
		"name": "koonr_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get users 200",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "85d25c40-eeaa-4a75-bbcd-94f35f8b086c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ec055de6-4f6f-425b-b169-0a60c4637b51",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/users",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get users response type requested not application/json 406",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e3232f2a-2c14-4544-a841-2f0ea21d8232",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3bba41ab-f02f-4386-b20e-e79e10785ddd",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/users",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get users response type requested not application/json 406",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "14b7f893-3c8d-407a-8e8f-9985d8a8729b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ca26c401-bbae-4fa6-959f-029f0ad77e72",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/users",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "283de4af-b4d0-4af0-b850-01d52d0f4721",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"123 Animal St.\",\n    \"capacity\": 50\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with missing two attributes 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd3d41a4-ebc1-4b1a-a201-ed3413bdc438",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with one missing attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a93f9e4-692f-4261-9bfd-0b49af60e5a0",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"capacity\": 50\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5c9c6fd-ed26-4998-9754-5d0cb4b1b9f9",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with incorrect data type for address 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fb9060b-365a-4741-8337-55a4c704d95e",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": 4923,\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with incorrect data type for capacity 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19c00d8f-fcf4-4cec-8bb1-18d91bf53bb3",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": \"20\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "406b12e2-b566-4c67-abc4-096ed970a1af",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20,\n    \"open\": true\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f047f46-8667-4694-919b-ca740c3eafa7",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter address too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb270ca8-0d06-49e4-8549-35f292b5d67d",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"This is a really really really really really long address\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter capacity too large 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "56a73bb1-adb2-4da4-a1bf-de6d41d85a45",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 501\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter capacity too small 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "525c71dc-3f67-4f23-aaa1-9390ca569516",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": -1\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af448712-21ec-4e75-91e3-464f43a6eda8",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter with invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc8dbfde-7923-4b82-946e-ad7a64110eee",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter attempt to change ID 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f2d8603a-a917-4ea2-aac8-05222e4dda88",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100,\n    \"id\": \"123\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter name not unique 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce6e00ad-fee6-48d2-93e4-d6b7104ce03b",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The name of the shelter is not unique');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "84067ab2-17af-4ce7-8991-f1d0f8423263",
						"exec": [
							"pm.test(\"406 status code\", function() {",
							"    pm.response.to.have.status(406)",
							"})",
							"",
							"pm.test(\"406 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5ef82d9-06e8-4bc3-80d2-6f80b4c42ea5",
						"exec": [
							"pm.test(\"415 status code\", function() {",
							"    pm.response.to.have.status(415)",
							"})",
							"",
							"pm.test(\"406 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('Server only accepts application/json data');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "text/html"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "348c9317-0c3f-403a-ba7d-92c37031bc7f",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca5095fa-5bdb-45ca-ba49-296bd4ccbf44",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7de8f2ce-35ed-4009-bafb-f43213781651",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter valid jwt shelter belongs to someone else 403 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d02f3d1-e2ba-420f-8af4-9ac18df186cf",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter valid jwt shelter not found 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8300cacd-c580-4c07-a496-908b5e5a345e",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter valid jwt shelter response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33af45c4-05aa-4f95-b39b-edb68759d71b",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"pm.test(\"406 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to delete root shelters 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3c7dc9e6-86ab-48b7-bfe8-f378ad064e33",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use DELETE on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d9486d5-4183-47c5-a31f-fb9276d9d5af",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c10c5e1-946e-4a62-be1e-767b09c9e00d",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter valid jwt shelter belongs to someone else 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77525b57-4db2-4043-86c4-91fbf9887609",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter valid jwt shelter not found 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2c87b402-deec-4812-9c66-97d7fe4659c4",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter valid jwt 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "687b5a61-ec0b-41db-8a03-341d0e61fa45",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter with valid jwt1 after shelter deleted 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6626e671-3b67-40bc-86f3-41fd8336f3a4",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter1 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9efdb3dc-6051-4d87-a00c-29c8b0b054bb",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter1_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"123 Animal St.\",\n    \"capacity\": 50\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter2 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a0127e0-6642-430c-a1dd-46e2e47769d0",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter2_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter2_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Pet Adoption Agency\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"321 Willow St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(75);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"321 Willow St.\",\n    \"capacity\": 75\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter3 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2016a70d-f6c2-4efc-bbf5-b3a519f38802",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter3_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter3_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Happy Paws Adoption Center\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"2323 Main St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(150);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Happy Paws Adoption Center\",\n    \"address\": \"2323 Main St.\",\n    \"capacity\": 150\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter4 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "993fd5f5-d7f1-4d76-9f9e-559dfba14a86",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter4_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter4_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Adopt a Pet\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"1111 50th Ave.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(100);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Adopt a Pet\",\n    \"address\": \"1111 50th Ave.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter5 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1382c432-f12e-4aa1-a8f8-9dca983a2830",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter5_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter5_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Little Critters Pet Rescue\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"38299 River Rd.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(475);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Little Critters Pet Rescue\",\n    \"address\": \"38299 River Rd.\",\n    \"capacity\": 475\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter6 jwt1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2716edc8-f421-4ef2-84b8-6349af949dab",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter6_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter6_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Rescue a Pet\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"54321 Main St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(30);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rescue a Pet\",\n    \"address\": \"54321 Main St.\",\n    \"capacity\": 30\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "add shelter7 jwt2 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c18c710-ed4e-4ebe-9acc-6617dcb590bf",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter7_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter7_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Dogs R Us\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"5678 Park Dr.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(80);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id2\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Dogs R Us\",\n    \"address\": \"5678 Park Dr.\",\n    \"capacity\": 80\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters jwt1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5a5b832-5637-4452-88ec-a5a7fa72f5e7",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"only correct number of shelters in response\", function () {",
							"    pm.expect(pm.response.json()['items'].length).to.eq(5);",
							"});",
							"",
							"",
							"pm.test(\"6 total shelters\", function () {",
							"    pm.expect(pm.response.json()['Total shelters']).to.eq(6);",
							"});",
							"",
							"",
							"pm.test(\"next property exists\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('next');",
							"});",
							"",
							"",
							"pm.test(\"only shelters with the user's id as owner\", function () {",
							"    var non_user_ids = pm.response.json()['items'].filter((item) => {",
							"        return item.owner !== pm.environment.get(\"user_id1\");",
							"    });",
							"",
							"    pm.expect(non_user_ids.length).to.eq(0);",
							"});",
							"",
							"",
							"pm.environment.set(\"shelters_next_url\", pm.response.json().next);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters next page jwt1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e520f64-18a6-4711-ad71-cfcb7e1f9cf8",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"only correct number of shelters in response\", function () {",
							"    pm.expect(pm.response.json()['items'].length).to.eq(1);",
							"});",
							"",
							"",
							"pm.test(\"6 total shelters\", function () {",
							"    pm.expect(pm.response.json()['Total shelters']).to.eq(6);",
							"});",
							"",
							"",
							"pm.test(\"only shelters with the user's id as owner\", function () {",
							"    var non_user_ids = pm.response.json()['items'].filter((item) => {",
							"        return item.owner !== pm.environment.get(\"user_id1\");",
							"    });",
							"",
							"    pm.expect(non_user_ids.length).to.eq(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{shelters_next_url}}",
					"host": [
						"{{shelters_next_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters jwt2 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8826b5c1-d65f-432d-bd1b-5fc38065cff9",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"only correct number of shelters in response\", function () {",
							"    pm.expect(pm.response.json()['items'].length).to.eq(1);",
							"});",
							"",
							"",
							"pm.test(\"1 total shelter\", function () {",
							"    pm.expect(pm.response.json()['Total shelters']).to.eq(1);",
							"});",
							"",
							"",
							"pm.test(\"only shelters with the user's id as owner\", function () {",
							"    var non_user_ids = pm.response.json()['items'].filter((item) => {",
							"        return item.owner !== pm.environment.get(\"user_id2\");",
							"    });",
							"",
							"    pm.expect(non_user_ids.length).to.eq(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "151dfddc-709b-47a2-815a-68b7022fc0b6",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03eb6c5a-ef1d-4378-890a-eb31cb87055f",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelters jwt1 response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d85e5458-3f8c-46cd-b6dd-8f7872025cae",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function() {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to patch root shelters 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90f7381e-f0f5-4ac5-aa31-fa06a64c0bd5",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use PATCH on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 one attribute 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b675a672-772d-43aa-86d8-41a2f330cfbc",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Adoption Center\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Adoption Center\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 two attributes 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "913ac683-a3cc-4e92-bb0c-4fa7e988553b",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Adoption Center\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"9876 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(300);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"9876 Animal St.\",\n    \"capacity\": 300\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 three attributes 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "93edf36f-0299-4fc9-8626-a2f5da201e9e",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('shelter1_id', pm.response.json()['id']);",
							"",
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"123 Animal St.\",\n    \"capacity\": 50\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40914a78-4240-413e-a3ce-bdd16ed8edf1",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with incorrect data type for address 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7713092b-a837-4abc-a177-3040b422928b",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": 4923,\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with incorrect data type for capacity 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df2bbe77-a682-495d-b103-f35f02a366e5",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": \"20\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with one valid attribute and one invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fe46d675-1d5f-45d1-b41f-220504eaafd0",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"open\": true\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with no valid attributes and invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20b0b099-aece-4dcd-a3a9-0310c8f593db",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"owner\": \"abcde\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffc4ed29-e95d-4e2b-9c13-208ef0563194",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 address too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0af76350-b970-46a4-bc31-13f9c233c158",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"This is a really really really really really long address\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 capacity too large 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e44f25eb-d271-40b9-bab3-ab1073ade774",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 501\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 capacity too small 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb07a9a2-987d-4832-87d9-6f791e4942de",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": -1\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73202ce1-6858-4475-89ad-fc45156879d7",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1b113b4-ec93-45fe-9362-45108c58cb89",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"401 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with jwt that is not the owner's jwt 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02bae560-6ee4-4a49-8065-b80ee0b867af",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 with valid jwt belonging to owner but shelter does not exist 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3ad35c2-315d-4d5a-82a6-4403204dd57b",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 attempt to change ID 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23a80589-a9f6-4e57-9a78-666d844eaff4",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100,\n    \"id\": \"123\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 name not unique 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0bbbe58f-a5bb-4acb-8779-6d45922d1c6e",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The name of the shelter is not unique');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9617e8d1-1813-46f4-b1b8-cee875d1bf3f",
						"exec": [
							"pm.test(\"406 status code\", function() {",
							"    pm.response.to.have.status(406)",
							"})",
							"",
							"pm.test(\"406 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch shelter1 request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "401a59e7-0f75-412b-9a1a-2151cb77c210",
						"exec": [
							"pm.test(\"415 status code\", function() {",
							"    pm.response.to.have.status(415)",
							"})",
							"",
							"pm.test(\"406 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('Server only accepts application/json data');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "text/html"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to put root shelters 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70978c24-8aa1-44e4-a395-ae83fa8ea63f",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use PUT on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48ed843d-6a04-450a-ba6b-21d0b2f69a3c",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter2_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Pet Adoption\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"987 Willow St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(100);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 name not unique 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c80043fc-096e-4f7f-91fe-3cc44e9e67c2",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The name of the shelter is not unique');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 one missing attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "816255d1-e762-4a90-ac37-69552f504e8b",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"987 Willow St.\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 two missing attributes 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20a41e96-5a01-40ff-ba19-80d751065aa9",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n     \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "384de326-5ac9-4519-87f9-7449bdeb3612",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with incorrect data type for address 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8aa5a51-a666-4e06-a200-28b67d4faaa3",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": 4923,\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with incorrect data type for capacity 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da822d60-194a-4670-b65d-0894ed788bff",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": \"20\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 invalid attrubute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba26fbce-6a3b-46e1-8f57-fa0948bfd90d",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100,\n    \"owner\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 attempt to change id 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "428b1480-f556-4e72-9036-0017323dab8d",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100,\n    \"id\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5af16f7-2f8b-4be1-97d5-4932f8c7d60b",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 address too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "53a59c68-f164-4b87-b517-ce72554df161",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"This is a really really really really really long address\",\n    \"capacity\": 20\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 capacity too large 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1b48341-8920-4bdf-9ca8-ffa60b754c84",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 501\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 capacity too small 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9a3fd55-01eb-469d-8e1b-45e4cdb08973",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('A shelter’s capacity must be in the range of 1 to 500');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": -1\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3685f24b-6c2b-44fa-a654-e24cb9864073",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea3fbc5e-7703-4a5a-b6ea-4da1ca4500c8",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 attempt to change ID 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db6ac70e-dd73-4138-8a97-8d78abd68802",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100,\n    \"id\": \"123\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 name not unique 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99121098-c4bc-4ef3-92ae-f2b4c817af93",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The name of the shelter is not unique');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Greenhill Humane Society\",\n    \"address\": \"4923 Willow St.\",\n    \"capacity\": 100\n}"
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 with jwt not belonging to owner 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc76e69f-9259-4c09-a460-b1190ca4cdd0",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "84782bbc-168e-44d6-8f7b-16939d0d20ad",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0720b16-3d85-4cd5-8cfd-4a0bdb29818e",
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							"",
							"pm.test(\"415 error message\", function () {",
							"    pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Server only accepts application/json data\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption\",\n    \"address\": \"987 Willow St.\",\n    \"capacity\": 100\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put invalid shelter id jwt1 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95dc8d4e-e2df-4d90-aba7-68f0732c3c39",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"321 Willow St.\",\n    \"capacity\": 75\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put shelter2 jwt1 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abf5d803-de2a-45cd-b60d-cdb3309053cf",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter2_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Pet Adoption Agency\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"321 Willow St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(75);",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([]);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pet Adoption Agency\",\n    \"address\": \"321 Willow St.\",\n    \"capacity\": 75\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49b500cb-e333-43fd-b852-17270162d760",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(2);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella\",\n    \"species\": \"Cat\",\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet with one missing attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cdd249ed-eaa7-485d-9499-6a05a3e1e347",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"Cat\",\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "253687c8-b81a-4533-9b5e-d370b86571ae",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"species\": \"Cat\",\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet with incorrect data type for species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9a361ee-16c4-42b0-9fc1-7124274d043b",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": 29,\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet with incorrect data type for age 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab6099b2-fcbc-46af-8583-47a40092dcc7",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": \"7\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet with invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "775dd9bd-89d1-4acc-909e-10647a2dc7f3",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 7,\n    \"owner\": \"Rebekah\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "922954f0-f3f2-4706-90a3-48fa57dfc04d",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet species too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "114339ec-5602-47ee-b291-c6abfb01bfb2",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"This is a really really really really really long species\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet invalid character in name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2b8f19f6-45d6-4b19-b271-4e5020a952e3",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo #1\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet invalid character in species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1591e95-2ce6-43ef-9d4e-4b69ba7bb675",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog!\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet age too high 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3891373c-c0c0-417e-ae21-b4f74b63df7a",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 26\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet age too low 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50c2ab63-8b64-47cf-9787-e4b603bf9399",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": -1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet attempt to change id 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5f7c718-10f4-4dcd-a452-0f1f4499ae33",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 7,\n    \"id\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a0e6f24b-74ca-4044-bf4e-733c32c6b94c",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bebd5813-80eb-47bb-9214-e6bbbb231162",
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							"pm.test(\"415 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('Server only accepts application/json data');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "261c752a-1eaf-49fa-92f5-4e3d047ad943",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(2);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet not found 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5696271f-e4f9-423c-84c3-a785b02ca1df",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73c321fb-b104-412a-9300-97d75b7ccb90",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to put root pets 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b867f2e1-01d1-4bc8-9507-8117822677d9",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use PUT on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83baf5cc-59bd-423a-8d55-427b2619048d",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bell\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Dog\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(3);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet one missing attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "787452b3-3276-4997-a0c1-ca2f9ac831e7",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet two missing attributes 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19398f47-a856-448f-aead-2c1d98f7cd75",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The request object is missing at least one of the required attributes');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"Dog\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f2d20a-5bd8-40e4-bb32-5450939221d6",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"species\": \"Cat\",\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet with incorrect data type for species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "551b5648-190b-4205-aa46-f0e24e4290bb",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": 29,\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet with incorrect data type for age 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e8bcb4e-1e85-4105-a32a-294888183e9f",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": \"7\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7e82849-80e0-4c5e-bb25-c1f9ec27adce",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": \"Dog\",\n    \"age\": 3,\n    \"owner\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa5856cc-e3cd-4cf3-b695-a38f23ced595",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet species too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "383884fe-88c4-4afc-956e-1795ca24098a",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"This is a really really really really really long species\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet invalid character in name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "42714911-9a46-4e87-98bb-bf5e7d04514c",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo #1\",\n    \"species\": \"Dog\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet invalid character in species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f13d37ff-6f56-4dd1-8d0a-e4fd6da112f8",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog!\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet age too high 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0493878e-309b-42d5-acdb-1213931f3b4d",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 26\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet age too low 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "207ac9ef-88b5-4083-be2c-aa6422da0084",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": -1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet attempt to change id 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3167d1d7-b444-4279-9f73-8f9d1187216a",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": \"Dog\",\n    \"age\": 3,\n    \"id\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet not found 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa48848b-099f-4a7d-95a2-adbf80ec9d8c",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a8e5781-fe47-45e7-8758-e7d1b11afd19",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella\",\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59276bb8-9f0b-456f-944a-593f22e71cbc",
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							"",
							"pm.test(\"415 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('Server only accepts application/json data');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella\",\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to delete root pets 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e9b3a43-4e83-4f70-b967-80cf22786d95",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use DELETE on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8de2d4b9-e2df-4361-be7b-b524619d6534",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet after deleted 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b42c3fce-0bb7-424c-be10-223f8d9e1f22",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet invalid id 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ce3029b-ba26-4a68-b3b0-1b1d46ac8295",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet1 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eca4a243-e5ba-44ea-80b1-ecea93329e24",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet1_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(2);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella\",\n    \"species\": \"Cat\",\n    \"age\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet2 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "213a296c-042a-43f0-a9b3-29714acf09c4",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet2_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet2_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Oreo\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Dog\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(10);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Oreo\",\n    \"species\": \"Dog\",\n    \"age\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet3 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d31d38a0-e550-4dae-8524-3bd1538a7724",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet3_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet3_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Mr. Rabbit\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Rabbit\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(1);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mr. Rabbit\",\n    \"species\": \"Rabbit\",\n    \"age\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet4 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d2d063f-0246-4378-b7b0-3e47446dd89d",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet4_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet4_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Cream\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Hamster\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(1.5);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Cream\",\n    \"species\": \"Hamster\",\n    \"age\": 1.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet5 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3022fc7c-c58e-436c-a0fe-a3c1a5388e84",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet5_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet5_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Fishy\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Goldfish\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(1);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Fishy\",\n    \"species\": \"Goldfish\",\n    \"age\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet6 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "808a9d43-81f2-4af0-b9d3-3c1ee2682e92",
						"exec": [
							"//Set boat id environment variable from response",
							"pm.environment.set('pet6_id', pm.response.json()['id']);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet6_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Andy\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Dog\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(5);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Andy\",\n    \"species\": \"Dog\",\n    \"age\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pets 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70156715-d36b-4344-815b-9a264728a52b",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"only correct number of pets in response\", function () {",
							"    pm.expect(pm.response.json()['items'].length).to.eq(5);",
							"});",
							"",
							"",
							"pm.test(\"6 total pets\", function () {",
							"    pm.expect(pm.response.json()['Total pets']).to.eq(6);",
							"});",
							"",
							"",
							"pm.test(\"next property exists\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('next');",
							"});",
							"",
							"",
							"pm.environment.set(\"pets_next_url\", pm.response.json().next);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pets next page 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d43ed06-dffc-4d75-9a6d-92c5a9578ac4",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"only correct number of pets in response\", function () {",
							"    pm.expect(pm.response.json()['items'].length).to.eq(1);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{pets_next_url}}",
					"host": [
						"{{pets_next_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pets response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ca091cf-c76f-4542-840c-7ed8c4b7bb95",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"",
							"pm.test(\"406 error message\", function() {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to patch root pets 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5baf3c05-7370-4abd-b52b-451b3c396bb1",
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"",
							"pm.test(\"405 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('You cannot use PATCH on the root URL');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 one attribute 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1ec624b-780d-4e77-a4fe-2d168f835968",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bell\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(2);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 two attributes 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9090f6a-379e-40ae-adfe-e26d20317f83",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bell\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Dog\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(3);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"Dog\",\n    \"age\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 three attributes 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2ae9511-5ab6-41b1-a1c1-cc51e1c83003",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(4);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({});",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella\",\n    \"species\": \"Cat\",\n    \"age\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 with incorrect data type for name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc4c0c15-b543-4f48-9022-3dfacf1474b7",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 123,\n    \"species\": \"Cat\",\n    \"age\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 with incorrect data type for species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b27346ee-e013-4ceb-9849-5de42c13babb",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": 3,\n    \"age\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 with incorrect data type for age 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a4000d68-dc13-4289-af8e-dedce01fce8d",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('The data type for at least one of the values is incorrect');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"species\": \"Cat\",\n    \"age\": \"4\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 with no valid attributes and one invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "caab3904-dd2d-4bf0-893b-f690a785ed51",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"owner\": \"Rebekah\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 with one valid attribute and one invalid attribute 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9453c6c-0d0e-44a6-b8ad-fa325c777efb",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"     pm.expect(pm.response.json()['Error']).to.eq('An attribute not valid for the request body was entered');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\",\n    \"owner\": \"Rebekah\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 name too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9963c25-730f-4f7e-a345-b3c3394f6687",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"This is a really really really really really long name\",\n    \"species\": \"Cat\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 species too long 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc6bd96f-d3ef-4f18-b1a7-5deb715599a5",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('String attributes can be no longer than 50 characters');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"This is a really really really really really long species\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 invalid character in name 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f1b3d1f-9916-4c4b-bb2c-8acc69dfa131",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bella #1\",\n    \"species\": \"Cat\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 invalid character in species 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ef572f8-e3ab-4e2d-9ac2-428ac689c950",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('An invalid character was entered');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"species\": \"Dog!\",\n    \"age\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 age too high 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dab9fc3f-2980-4395-a76e-b11ba3d1f403",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": 26\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 age too low 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77bdb98a-0654-4728-9d7f-40c329fa8a99",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"400 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('A pet’s age must be in the range of 0 to 25');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": -1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 attempt to change id 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c8119e0-5641-4d0d-8211-d4c4932b5ebc",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The ID attribute cannot be changed');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 not found 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a4f04d7-1502-4df6-a840-dd3c6783c4c2",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 response type requested not application/json 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9526ded3-dea4-4b61-be0c-29c9f12b3b5c",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							"",
							"pm.test(\"406 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('application/json is the only supported content type');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch pet1 request body not application/json 415",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4037e737-a90d-4242-86e4-fb9db875ebf9",
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							"pm.test(\"415 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('Server only accepts application/json data');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Bell\"\n}",
					"options": {
						"raw": {
							"language": "html"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet1 before added to shelter1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9fbd9e9-e07c-419b-9ece-2a28d706c74d",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than shelter is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(4);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"",
							"pm.test(\"shelter content is valid\", function () {",
							"    const shelter_id = pm.environment.get(\"shelter1_id\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + shelter_id;",
							"",
							"    pm.expect(pm.response.json()['shelter']).to.deep.eq({});",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter1 with jwt1 before pets added 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df0c01c0-2955-4183-a785-453240582e9f",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    pm.expect(pm.response.json()['pets']).to.deep.eq([])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet1 in shelter1 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edef2258-8d33-44bd-a4ef-0ee4a945f94a",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet1 after added to shelter1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f84042da-248d-4d6c-97f3-c7519f3abddd",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than shelter is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(4);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"",
							"pm.test(\"shelter content is valid\", function () {",
							"    const shelter_id = pm.environment.get(\"shelter1_id\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + shelter_id;",
							"",
							"    pm.expect(pm.response.json()['shelter']).to.deep.eq({",
							"        \"name\": \"Greenhill Humane Society\",",
							"        \"id\": shelter_id,",
							"        \"self\": self_url",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet1 in shelter2 when already in shelter1 with jwt1 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44bbdcd4-d711-41d6-a964-d7f17e83af56",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('This pet is already in a shelter');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}",
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet2 in shelter1 with missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ddf9c08-41f3-40bf-adbc-4cc8d0078260",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet2 in shelter1 with invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c48f1dc-a140-4701-bbd0-763da1a9128e",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet2 in shelter1 with valid jwt that is not jwt1 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4dbccaf9-db60-49f4-b462-094c637e26c9",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet2 in shelter that doesn't exist with jwt1 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2383ad2b-2ef8-4bac-9eb0-f4e14ea44cda",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}",
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet that doesn't exist in shelter1 with jwt1 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad25e042-4d45-4ba8-990a-97824c486f2d",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet2 in shelter1 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cadaf0d4-ebe2-4fd4-8c17-3cac8c090b5a",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter1 with jwt1 after pets added 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9195fd54-23a8-4e2c-921e-af6a9e288d83",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    const pets_length = pm.response.json()[\"pets\"].length",
							"",
							"    const invalid_pets = pm.response.json()[\"pets\"].filter((pet) => ",
							"        (pet.id !== pm.environment.get(\"pet1_id\") || pet.name !== \"Bella\") &&",
							"        (pet.id !== pm.environment.get(\"pet2_id\") || pet.name !== \"Oreo\"))",
							"    ",
							"    pm.expect(invalid_pets.length).to.eq(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet3 in shelter7 with jwt2 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ced4d79-0803-4213-8cc6-a18727b2bb96",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter7 with jwt2 after pet3 added 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "45d0f1ac-964f-492a-b61b-aadd2eaac1c2",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter7_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Dogs R Us\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"5678 Park Dr.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(80);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id2\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    const pet_id = pm.environment.get(\"pet3_id\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pet_id;",
							"",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([{",
							"            \"name\": \"Mr. Rabbit\",",
							"            \"id\": pet_id,",
							"            \"self\": self_url",
							"        }]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet4 in shelter1 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ba7449c-97d1-4860-9785-fe4330723b49",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet4_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet1 from shelter1 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a8c34b3-8dd9-4613-b46b-792c76361f97",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet1 after removed from shelter1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7c84daf-112b-4645-b62a-8c6477d2312a",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(4);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(true);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({})",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter1 with jwt1 after pet1 removed 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "490297c4-4a59-4023-a609-9fe87841c7af",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Greenhill Humane Society\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"123 Animal St.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(50);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id1\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    const pets_length = pm.response.json()[\"pets\"].length",
							"",
							"    const invalid_pets = pm.response.json()[\"pets\"].filter((pet) => ",
							"        (pet.id !== pm.environment.get(\"pet4_id\") || pet.name !== \"Cream\") &&",
							"        (pet.id !== pm.environment.get(\"pet2_id\") || pet.name !== \"Oreo\"))",
							"    ",
							"    pm.expect(invalid_pets.length).to.eq(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet3 from shelter7 with missing jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "030d49e2-3921-4b55-8b83-0cc2b9cad6b9",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet3 from shelter7 with invalid jwt 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca26066b-294b-4803-90cc-b6f00966cfc9",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"401 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('JWT is missing or invalid');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet3 from shelter1 when pet3 is in another shelter with jwt1 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f25e9b87-9f7b-4d41-b953-d68c374fa7de",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('The pet is not in this shelter');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet3 from shelter7 with jwt1 that does not match jwt of shelter owner 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d88b2f1c-250a-49ae-be2c-24fd00e78026",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('This shelter belongs to someone else');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove pet3 from invalid shelter with jwt2 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91521e8f-2c2f-41ba-ae91-3df7a9df9a10",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{invalid_shelter_id}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{invalid_shelter_id}}",
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove invalid pet from shelter7 with jwt2 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0665fde4-424f-421a-a01e-fea75162ab80",
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"404 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No pet with this pet_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{invalid_pet_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{invalid_pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put pet1 previously removed from shelter1 back into shelter7 with jwt2 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3854e939-f067-4fa4-b570-2f60ac085cdc",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}",
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet1 after added to shelter7 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1666b469-0502-4a56-a3e9-cdcd3c98b41b",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than shelter is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet1_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Bella\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Cat\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(4);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"",
							"pm.test(\"shelter content is valid\", function () {",
							"    const shelter_id = pm.environment.get(\"shelter7_id\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + shelter_id;",
							"",
							"    pm.expect(pm.response.json()['shelter']).to.deep.eq({",
							"        \"name\": \"Dogs R Us\",",
							"        \"id\": shelter_id,",
							"        \"self\": self_url",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter7 with jwt2 after pet1 added 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d96587c6-7cbc-4a0a-a3d8-fa7f6fbb3a5f",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter7_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Dogs R Us\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"5678 Park Dr.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(80);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id2\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    const pet1_id = pm.environment.get(\"pet1_id\");",
							"    const pet3_id = pm.environment.get(\"pet3_id\");",
							"",
							"    const pet1_self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pet1_id;",
							"    const pet3_self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pet3_id;",
							"",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([",
							"        {",
							"            \"name\": \"Mr. Rabbit\",",
							"            \"id\": pet3_id,",
							"            \"self\": pet3_self_url",
							"        },",
							"        {",
							"            \"name\": \"Bella\",",
							"            \"id\": pet1_id,",
							"            \"self\": pet1_self_url",
							"        }",
							"    ]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e29a6920-5082-423d-9b1b-9f91fbb48179",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get shelter7 with jwt2 after pet1 deleted 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed886fd8-bd98-49ef-9656-75b623282062",
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content other than pets is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"shelter7_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Dogs R Us\");",
							"    pm.expect(pm.response.json()[\"address\"]).to.eq(\"5678 Park Dr.\");",
							"    pm.expect(pm.response.json()[\"capacity\"]).to.eq(80);",
							"    pm.expect(pm.response.json()[\"owner\"]).to.eq(pm.environment.get(\"user_id2\"));",
							"    const self_url = pm.environment.get(\"app_url\") + \"/shelters/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							"",
							"pm.test(\"pets content is valid\", function () {",
							"    const pet3_id = pm.environment.get(\"pet3_id\");",
							"",
							"    const pet3_self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pet3_id;",
							"",
							"    pm.expect(pm.response.json()[\"pets\"]).to.deep.eq([",
							"        {",
							"            \"name\": \"Mr. Rabbit\",",
							"            \"id\": pet3_id,",
							"            \"self\": pet3_self_url",
							"        }",
							"    ]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter1 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44d9a82f-4033-480c-912d-ac301379b9d3",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter1 with jwt1 shelter1 does not exist 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6dfee36-89d5-4638-9d32-c673f4463adf",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							"pm.test(\"403 error message\", function () {",
							"    pm.expect(pm.response.json()['Error']).to.eq('No shelter with this shelter_id exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter1_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet2 after shelter1 deleted 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b78d81b2-3950-425c-a8d6-69ded7a53982",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet2_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Oreo\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Dog\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(10);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({})",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pet4 after shelter1 deleted 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74ccbe2f-77e0-49fa-add4-0238f2ae3a28",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()['id']).to.eq(pm.environment.get(\"pet4_id\"));",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Cream\");",
							"    pm.expect(pm.response.json()[\"species\"]).to.eq(\"Hamster\");",
							"    pm.expect(pm.response.json()[\"age\"]).to.eq(1.5);",
							"    pm.expect(pm.response.json()[\"adopted\"]).to.eq(false);",
							"    pm.expect(pm.response.json()[\"shelter\"]).to.deep.eq({})",
							"    const self_url = pm.environment.get(\"app_url\") + \"/pets/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/pets/{{pet4_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter2 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0f11e8e-9d0d-4055-addd-e730e2548528",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter3 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cca79fe-6c6c-41af-ba0a-13f98e9442d5",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter4 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ee6d27e-adb3-41c9-98d0-258eb3407d67",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter4_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter5 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "722b57ed-001d-4004-8e28-eac4a0e662e2",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter5_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter5_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter6 with jwt1 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f207786-48a1-4650-b43e-530bd3046297",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter6_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter6_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete shelter7 with jwt2 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfe00738-acb1-488f-8742-a11edccf6c78",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/shelters/{{shelter7_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"shelters",
						"{{shelter7_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet2 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0ed4624-44ce-4559-aed0-345d60f2fbeb",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet2_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet3 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cd92df6-54c9-4ee6-b967-cca953024708",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet3_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet4 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74d6daf1-5c77-4f18-a254-607ad89c3edc",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet4_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet5 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ca89f2c-5b6b-4494-af4d-8286870dca5d",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet5_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet5_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete pet6 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27c575db-7816-4ae0-b7f6-5634fa28adce",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/pets/{{pet6_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"pets",
						"{{pet6_id}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}